{"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport { useContext, useEffect } from 'react';\nimport Icon from '../icon/Icon';\nimport styles from './Snackbar.module.scss';\nimport { ThemeContext } from '../theme-context/ThemeContext';\nvar Snackbar = function (props) {\n    var theme = useContext(ThemeContext).theme;\n    var _a = props.snackBarOptions, iconName = _a.iconName, message = _a.message, isShow = _a.isShow, variant = _a.variant, timmer = _a.timmer, iconColor = _a.iconColor, renderComponent = _a.renderComponent;\n    var timeOutId;\n    useEffect(function () {\n        timeOutId = setTimeout(function () {\n            props.setSnackBarOptions(__assign(__assign({}, props.snackBarOptions), { isShow: false }));\n        }, timmer ? timmer : 5000);\n        return function () {\n            clearTimeout(timeOutId);\n        };\n    }, [isShow]);\n    return (React.createElement(React.Fragment, null, isShow && (React.createElement(\"div\", { className: \"\".concat(styles.sanckBarContainer, \" \").concat(styles.fadeInUp, \"  \"), style: theme.snackBar[variant]\n            ? __assign({}, theme.snackBar[variant]) : __assign({}, theme.snackBar.info) },\n        React.createElement(Icon, { iconName: \"\".concat(iconName\n                ? iconName\n                : variant === 'info'\n                    ? 'warning'\n                    : variant === 'error'\n                        ? 'xcircle'\n                        : variant === 'success'\n                            ? 'checkCircle'\n                            : 'info'), iconColor: iconColor ? iconColor : theme.snackBar.icon.color, width: \"50px\", height: \"50px\", borderProperty: \"none\" }),\n        React.createElement(\"p\", null,\n            \" \",\n            message),\n        React.createElement(\"div\", null, renderComponent && renderComponent)))));\n};\nexport default Snackbar;\n","references":["C:/PIRATES/fitknock-ui-kit/node_modules/@types/react/index.d.ts","C:/PIRATES/fitknock-ui-kit/node_modules/@types/react/index.d.ts","C:/PIRATES/fitknock-ui-kit/src/components/icon/Icon.tsx","C:/PIRATES/fitknock-ui-kit/src/components/theme-context/ThemeContext.tsx"],"dtsmap":{"name":"C:/PIRATES/fitknock-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/snackbar/Snackbar.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"Snackbar.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/snackbar/Snackbar.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,YAAY,EAAyB,MAAM,OAAO,CAAC;AAM5D,MAAM,MAAM,gBAAgB,GAAG;IAC7B,OAAO,EAAE,MAAM,CAAC;IAChB,MAAM,EAAE,OAAO,CAAC;IAChB,OAAO,EAAE,OAAO,GAAG,SAAS,GAAG,MAAM,CAAC;IACtC,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,eAAe,CAAC,EAAE,YAAY,CAAC;CAChC,CAAC;AACF,MAAM,MAAM,SAAS,GAAG;IACtB,eAAe,EAAE,gBAAgB,CAAC;IAClC,kBAAkB,EAAE,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAAC;CAC5E,CAAC;AACF,QAAA,MAAM,QAAQ,UAAW,SAAS,sBAgEjC,CAAC;AAEF,eAAe,QAAQ,CAAC\"}"},"dts":{"name":"C:/PIRATES/fitknock-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/snackbar/Snackbar.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\nimport { ReactElement } from 'react';\nexport type ISnackBarOptions = {\n    message: string;\n    isShow: boolean;\n    variant: 'error' | 'success' | 'info';\n    timmer?: number;\n    iconName?: string;\n    iconColor?: string;\n    renderComponent?: ReactElement;\n};\nexport type ISnackBar = {\n    snackBarOptions: ISnackBarOptions;\n    setSnackBarOptions: React.Dispatch<React.SetStateAction<ISnackBarOptions>>;\n};\ndeclare const Snackbar: (props: ISnackBar) => React.JSX.Element;\nexport default Snackbar;\n//# sourceMappingURL=Snackbar.d.ts.map"}}
